/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UIPackage;

import healthcare.City;
import healthcare.Community;
import healthcare.Hospital;
import healthcare.HospitalCity;
import healthcare.System1;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mynenidivya
 */
public class HospitalPanel extends javax.swing.JPanel {

    /**
     * Creates new form HospitalPanel
     */
     private System1 system;
    private JPanel displayJPanel;
    private String selectedCity;
    private HospitalCity City;

    public HospitalPanel(JPanel displayJPanel, System1 system, String selectedCity) {
        java.lang.System.out.println("Inside the hospitalJpanel : " + selectedCity);
        this.system = system;
        this.displayJPanel = displayJPanel;
        this.selectedCity = selectedCity;
        initComponents();
        populateHospitals();
    }
    String regxName = "^[a-zA-Z\\s]+$";
    String regxNum= "^[0-9]*$";
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnresetfields = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        hospitalJTable = new javax.swing.JTable();
        addJButton = new javax.swing.JButton();
        deleteJButton = new javax.swing.JButton();
        txtstate = new javax.swing.JTextField();
        updateJButton = new javax.swing.JButton();
        txtcountry = new javax.swing.JTextField();
        lblstreetname = new javax.swing.JLabel();
        lblhousename = new javax.swing.JLabel();
        lblcountry = new javax.swing.JLabel();
        goJButton = new javax.swing.JButton();
        txthosptialname = new javax.swing.JTextField();
        housesJLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 204, 204));

        btnresetfields.setText("Reset ");
        btnresetfields.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnresetfieldsActionPerformed(evt);
            }
        });

        backJButton.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        backJButton.setText("previous");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        hospitalJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "HospitalName", "State", "Country"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        hospitalJTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hospitalJTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(hospitalJTable);

        addJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UIPackage/Save.png"))); // NOI18N
        addJButton.setText("Add");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });

        deleteJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UIPackage/delete.png"))); // NOI18N
        deleteJButton.setText("Delete");
        deleteJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteJButtonActionPerformed(evt);
            }
        });

        txtstate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtstateActionPerformed(evt);
            }
        });

        updateJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UIPackage/edit.png"))); // NOI18N
        updateJButton.setText("Update");
        updateJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateJButtonActionPerformed(evt);
            }
        });

        txtcountry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcountryActionPerformed(evt);
            }
        });

        lblstreetname.setText("State : ");

        lblhousename.setText("Hospital Name : ");

        lblcountry.setText("Country : ");

        goJButton.setText("Open");
        goJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goJButtonActionPerformed(evt);
            }
        });

        txthosptialname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txthosptialnameActionPerformed(evt);
            }
        });

        housesJLabel.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        housesJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        housesJLabel.setText("Hospital List");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(lblhousename)
                        .addGap(18, 18, 18)
                        .addComponent(txthosptialname, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblstreetname)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtstate, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(lblcountry)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtcountry, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnresetfields))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(goJButton)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(housesJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deleteJButton)
                            .addComponent(addJButton)
                            .addComponent(updateJButton))))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(housesJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backJButton))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addJButton)
                        .addGap(31, 31, 31)
                        .addComponent(updateJButton)
                        .addGap(34, 34, 34)
                        .addComponent(deleteJButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(goJButton)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txthosptialname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblhousename, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblstreetname, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblcountry, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtstate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtcountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnresetfields))
                .addContainerGap(121, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnresetfieldsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnresetfieldsActionPerformed

        txthosptialname.setText("");
        txtstate.setText("");
        txtcountry.setText("");
    }//GEN-LAST:event_btnresetfieldsActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        displayJPanel.remove(this);
        CardLayout cardLayout =  (CardLayout) displayJPanel.getLayout();
        cardLayout.previous(displayJPanel);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void hospitalJTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hospitalJTableMouseClicked
        int selectedRowIndex = hospitalJTable.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to update");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) hospitalJTable.getModel();
        Hospital hospital = (Hospital) model.getValueAt(selectedRowIndex, 0);

        txthosptialname.setText(hospital.getHospitalName());
        txtstate.setText(hospital.getState());
        txtcountry.setText(hospital.getCountry());
    }//GEN-LAST:event_hospitalJTableMouseClicked

    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed

        if (txthosptialname.getText().isBlank() && txtstate.getText().isBlank() && txtcountry.getText().isBlank()){
            JOptionPane.showMessageDialog(this, "Please enter valid Hospital details");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) hospitalJTable.getModel();

        for(Hospital hospital:City.getHospitals()){
            if (txthosptialname.getText().equals(hospital.getHospitalName())){
                JOptionPane.showMessageDialog(this, "Hospital name already exists\nPlease enter a different name");
                return;
            }
        }
        if (txthosptialname.getText().matches(regxName) && txtstate.getText().matches(regxName)&&txtcountry.getText().matches(regxName)){

            Hospital hospital = new Hospital(txthosptialname.getText(), txtstate.getText(), txtcountry.getText());
             City.getHospitals().add(hospital);
            populateHospitals();

            txthosptialname.setText("");
            txtstate.setText("");
            txtcountry.setText("");
        }else{
            JOptionPane.showMessageDialog(this, "Please enter valid details");
        }
    }//GEN-LAST:event_addJButtonActionPerformed

    private void deleteJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteJButtonActionPerformed
        int selectedRowIndex = hospitalJTable.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to delete");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) hospitalJTable.getModel();
        Hospital hospital = (Hospital) model.getValueAt(selectedRowIndex, 0);

        City.getHospitals().remove(hospital);

        txthosptialname.setText("");
        txtstate.setText("");
        txtcountry.setText("");

        JOptionPane.showMessageDialog(this, "Hospital deleted successfully");
        populateHospitals();
    }//GEN-LAST:event_deleteJButtonActionPerformed

    private void txtstateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtstateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtstateActionPerformed

    private void updateJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateJButtonActionPerformed
        int selectedRowIndex = hospitalJTable.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to update");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) hospitalJTable.getModel();
        Hospital hospital = (Hospital) model.getValueAt(selectedRowIndex, 0);
        
        if (hospital.getHospitalName().equals(txthosptialname.getText()) && hospital.getState().equals(txtstate.getText()) && hospital.getCountry().equals(txtcountry.getText())){
            JOptionPane.showMessageDialog(this, "No new values entered\nPlease enter a new hospital name");
            return;
        }else if (txthosptialname.getText().equals("") && txtstate.getText().equals("") && txtcountry.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Hospital Name is blank\nPlease enter a valid hospital name");
            return;
        }
        else{
            if (txthosptialname.getText().matches(regxName) && txtstate.getText().matches(regxName)&&txtcountry.getText().matches(regxName)){
                hospital.setHospitalName(txthosptialname.getText());
                hospital.setState(txtstate.getText());
                hospital.setCountry(txtcountry.getText());

                JOptionPane.showMessageDialog(this, "Hospital details updated successfully");
                populateHospitals();

                txthosptialname.setText("");
                txtstate.setText("");
                txtcountry.setText("");
            }else{
                JOptionPane.showMessageDialog(this, "Enter valid details");
            }
        }
        }
        private void populateHospitals() {

            DefaultTableModel model = (DefaultTableModel) hospitalJTable.getModel();
            model.setRowCount(0);
            
            for(HospitalCity city:system.getCities()) {
            if(city.getCityName().equalsIgnoreCase(selectedCity)){
                this.City=city;
                for(Hospital hospital:city.getHospitals()){
                    Object[] row = new Object[3];
                    row[0]=hospital;
                    row[1]=hospital.getState();
                    row[2]=hospital.getCountry();
                    
                    model.addRow(row);
                }
            }
        }
        
        java.lang.System.out.println(model.getRowCount());


    }//GEN-LAST:event_updateJButtonActionPerformed

    private void txtcountryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcountryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcountryActionPerformed

    private void goJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = hospitalJTable.getSelectedRow();
        if(selectedRow <0){
            JOptionPane.showMessageDialog(this, "Please Select any Community to View the Houses");
            return;
        }

        showdoctors(selectedRow);
        }
        private void showdoctors(int selectedRow) {

            DefaultTableModel model = (DefaultTableModel) hospitalJTable.getModel();
            Hospital hospital= (Hospital) model.getValueAt(selectedRow, 0);
            if (hospital.getDoctors().isEmpty()==true){
                JOptionPane.showMessageDialog(this, "No doctors available under this Hospital");
            }navigateTodoctors(hospital);
        }

        private void navigateTodoctors(Hospital hospital) {

            DoctorPanel doctorPanel = new DoctorPanel(displayJPanel,hospital) ;
            displayJPanel.add("PersonsInformation", doctorPanel);
            CardLayout cardLayout = (CardLayout) displayJPanel.getLayout();
            cardLayout.next(displayJPanel);

    }//GEN-LAST:event_goJButtonActionPerformed

    private void txthosptialnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txthosptialnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txthosptialnameActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnresetfields;
    private javax.swing.JButton deleteJButton;
    private javax.swing.JButton goJButton;
    private javax.swing.JTable hospitalJTable;
    private javax.swing.JLabel housesJLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblcountry;
    private javax.swing.JLabel lblhousename;
    private javax.swing.JLabel lblstreetname;
    private javax.swing.JTextField txtcountry;
    private javax.swing.JTextField txthosptialname;
    private javax.swing.JTextField txtstate;
    private javax.swing.JButton updateJButton;
    // End of variables declaration//GEN-END:variables
}
