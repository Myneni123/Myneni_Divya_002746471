/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UIPackage;

import healthcare.Person;
import healthcare.VitalSigns;
import java.awt.CardLayout;
import java.awt.Component;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import healthcare.Encounter;
import healthcare.EncounterHistory;
import healthcare.System;

/**
 *
 * @author mynenidivya
 */
public class AddingNewVitals extends javax.swing.JPanel {

    /**
     * Creates new form AddingNewVitals
     */
    private JPanel displayJPanel;
    private Person person;
    public AddingNewVitals(JPanel displayJPanel, Person person) {
        this.displayJPanel=displayJPanel;
        this.person=person;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Diastolic = new javax.swing.JTextField();
        txtheight = new javax.swing.JTextField();
        bloodPressureSystolicJLabel = new javax.swing.JLabel();
        addVitalSignsJLabel = new javax.swing.JLabel();
        bloodPressureDiastolicJLabel = new javax.swing.JLabel();
        Temperature = new javax.swing.JTextField();
        Systolic = new javax.swing.JTextField();
        backJButton = new javax.swing.JButton();
        weightJLabel = new javax.swing.JLabel();
        txtpulseRate = new javax.swing.JTextField();
        heightJLabel = new javax.swing.JLabel();
        txtweight = new javax.swing.JTextField();
        bodyTemperatureJLabel = new javax.swing.JLabel();
        txtrespirationRate = new javax.swing.JTextField();
        pulseRateJLabel = new javax.swing.JLabel();
        respirationRateJLabel = new javax.swing.JLabel();
        addJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 204, 204));

        bloodPressureSystolicJLabel.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        bloodPressureSystolicJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        bloodPressureSystolicJLabel.setText("Blood Pressure Systolic :");

        addVitalSignsJLabel.setFont(new java.awt.Font("Lucida Grande", 1, 20)); // NOI18N
        addVitalSignsJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addVitalSignsJLabel.setText("Add Vital Signs");

        bloodPressureDiastolicJLabel.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        bloodPressureDiastolicJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        bloodPressureDiastolicJLabel.setText("Blood Pressure Diastolic :");

        backJButton.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        backJButton.setText("Previous");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        weightJLabel.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        weightJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        weightJLabel.setText("Weight :");

        heightJLabel.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        heightJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        heightJLabel.setText("Height :");

        bodyTemperatureJLabel.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        bodyTemperatureJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        bodyTemperatureJLabel.setText("Body Temperature :");

        pulseRateJLabel.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        pulseRateJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        pulseRateJLabel.setText("Pulse Rate :");

        respirationRateJLabel.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        respirationRateJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        respirationRateJLabel.setText("Respiration Rate :");

        addJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UIPackage/Save.png"))); // NOI18N
        addJButton.setText("Add");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(backJButton)
                        .addGap(61, 61, 61)
                        .addComponent(addVitalSignsJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap(75, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(weightJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(83, 83, 83)
                                    .addComponent(txtweight, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(bloodPressureDiastolicJLabel)
                                        .addComponent(bloodPressureSystolicJLabel))
                                    .addGap(82, 82, 82)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(Diastolic, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(Systolic, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(8, 8, 8)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(heightJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(pulseRateJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(respirationRateJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(1, 1, 1)
                                    .addComponent(bodyTemperatureJLabel)))
                            .addGap(82, 82, 82)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(Temperature, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtheight, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtpulseRate, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtrespirationRate, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(254, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(261, 261, 261)
                .addComponent(addJButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addVitalSignsJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backJButton))
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtweight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(weightJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bloodPressureSystolicJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Systolic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bloodPressureDiastolicJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Diastolic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(heightJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtheight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bodyTemperatureJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Temperature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pulseRateJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtpulseRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(respirationRateJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtrespirationRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59)
                .addComponent(addJButton)
                .addContainerGap(108, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        displayJPanel.remove(this);
        Component[] componentArray = displayJPanel.getComponents();
        Component component = componentArray[componentArray.length-1];
        EncountersPanel encounterHistoryJPanel = (EncountersPanel) component;
        encounterHistoryJPanel.populateEncounterHistoryTable();
        CardLayout cardLayout = (CardLayout) displayJPanel.getLayout();
        cardLayout.previous(displayJPanel);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed
        boolean success = false;

        double bodyTemperature=0;
        int pulseRate=0;
        double bloodPressureSystolic=0;
        double bloodPressureDiastolic=0;
        int respirationRate=0;
        double height=0;
        double weight=0;

        try {
            bodyTemperature = Temperature.getText().isBlank()?0:Double.parseDouble(Temperature.getText());
            success = true;
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(null, "Body Temperature must be a Float decimal number");
            success = false;
        }

        try {
            pulseRate = txtpulseRate.getText().isBlank()?0:Integer.parseInt(txtpulseRate.getText());
            success = true;
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(null, "Pulse Rate must be an Integer");
            success = false;
        }

        try {
            bloodPressureSystolic = Systolic.getText().isBlank()?0:Double.parseDouble(Systolic.getText());
            success = true;
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(null, "Systolic BP must be Float decimal number");
            success = false;
        }

        try {
            bloodPressureDiastolic = Diastolic.getText().isBlank()?0:Double.parseDouble(Diastolic.getText());
            success = true;
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(null, "Diastolic Blood Pressure must be Float decimal number");
            success = false;
        }

        try {
            respirationRate = txtrespirationRate.getText().isBlank()?0:Integer.parseInt(txtrespirationRate.getText());
            success = true;
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(null, "Respiration Rate must be an Integer");
            success = false;
        }

        try {
            height = txtheight.getText().isBlank()?0:Double.parseDouble(txtheight.getText());
            success = true;
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(null, "Height must be Float decimal number");
            success = false;
        }

        try {
            weight = txtweight.getText().isBlank()?0:Double.parseDouble(txtweight.getText());
            success = true;
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(null, "Weight must be Float decimal number");
            success = false;
        }

        if (success) {

            VitalSigns vitalSigns = new VitalSigns(weight, bloodPressureSystolic, bloodPressureDiastolic, height, bodyTemperature, pulseRate, respirationRate);
            vitalSigns.setUpdated(formateDate(new Date()));
            Encounter encounter = new Encounter(vitalSigns);

            EncounterHistory encounterHistory = person.getPatient().getEncounterhistory();
            encounterHistory.getEncounters().add(encounter);

            JOptionPane.showMessageDialog(this, "Successfully Added the Vital Signs");
            resetData();

        }
    }
       private String formateDate(Date date) 
        {
       String Formate="yyyy-mm-dd hh:mm:ss";
       SimpleDateFormat Simple=new SimpleDateFormat(Formate);
       return Simple.format(date);
    }
        private void resetData(){
        Systolic.setText("");
        Diastolic.setText("");
        Temperature.setText("");
        txtheight.setText("");
        txtpulseRate.setText("");
        txtrespirationRate.setText("");
        txtweight.setText("");
        
    }//GEN-LAST:event_addJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Diastolic;
    private javax.swing.JTextField Systolic;
    private javax.swing.JTextField Temperature;
    private javax.swing.JButton addJButton;
    private javax.swing.JLabel addVitalSignsJLabel;
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel bloodPressureDiastolicJLabel;
    private javax.swing.JLabel bloodPressureSystolicJLabel;
    private javax.swing.JLabel bodyTemperatureJLabel;
    private javax.swing.JLabel heightJLabel;
    private javax.swing.JLabel pulseRateJLabel;
    private javax.swing.JLabel respirationRateJLabel;
    private javax.swing.JTextField txtheight;
    private javax.swing.JTextField txtpulseRate;
    private javax.swing.JTextField txtrespirationRate;
    private javax.swing.JTextField txtweight;
    private javax.swing.JLabel weightJLabel;
    // End of variables declaration//GEN-END:variables
}
